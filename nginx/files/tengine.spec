# rpmrebuild autogenerated specfile

BuildRoot: /root/.tmp/rpmrebuild.10531/work/root
AutoProv: no
%undefine __find_provides
AutoReq: no
%undefine __find_requires
# Do not try autogenerate prereq/conflicts/obsoletes and check files
%undefine __check_files
%undefine __find_prereq
%undefine __find_conflicts
%undefine __find_obsoletes
# Be sure buildpolicy set to do nothing
%define __spec_install_post %{nil}
# Something that need for rpm-4.1
%define _missing_doc_files_terminate_build 0
#dummy
#dummy
#BUILDHOST:    ip-10-1-17-226.eu-central-1.compute.internal
#BUILDTIME:    Thu Oct 29 23:25:20 2020
#SOURCERPM:    tengine-2.3.3-2.el7.ngx.src.rpm

#RPMVERSION:   4.11.3
#COOKIE:       ip-10-1-17-226.eu-central-1.compute.internal 1603985120


#OS:           linux
#SIZE:           2830200
#ARCHIVESIZE:           2834984
#ARCH:         x86_64
BuildArch:     x86_64
Name:          tengine
Version:       2.3.3
Release:       2.el7.ngx
License:       2-clause BSD-like license
Group:         System Environment/Daemons
Summary:       High performance web server


URL:           http://tengine.taobao.org/
Vendor:        Nginx, Inc.

Epoch:         1




Provides:      config(tengine) = 1:2.3.3-2.el7.ngx
Provides:      tengine = 1:2.3.3-2.el7.ngx
Provides:      tengine(x86-64) = 1:2.3.3-3.el7.ngx
Provides:      tengine-r2.3.3
Provides:      webserver
Requires:      /bin/sh
Requires:      /bin/sh
Requires:      /bin/sh
Requires:      /bin/sh
Requires:      /bin/sh
Requires:      config(tengine) = 1:2.3.3-2.el7.ngx
Requires:      libc.so.6()(64bit)
Requires:      libc.so.6(GLIBC_2.10)(64bit)
Requires:      libc.so.6(GLIBC_2.14)(64bit)
Requires:      libc.so.6(GLIBC_2.17)(64bit)
Requires:      libc.so.6(GLIBC_2.2.5)(64bit)
Requires:      libc.so.6(GLIBC_2.3)(64bit)
Requires:      libc.so.6(GLIBC_2.3.3)(64bit)
Requires:      libc.so.6(GLIBC_2.3.4)(64bit)
Requires:      libc.so.6(GLIBC_2.4)(64bit)
Requires:      libc.so.6(GLIBC_2.7)(64bit)
Requires:      libcrypt.so.1()(64bit)
Requires:      libcrypt.so.1(GLIBC_2.2.5)(64bit)
Requires:      libcrypto.so.10()(64bit)
Requires:      libcrypto.so.10(OPENSSL_1.0.2)(64bit)
Requires:      libcrypto.so.10(libcrypto.so.10)(64bit)
Requires:      libdl.so.2()(64bit)
Requires:      libdl.so.2(GLIBC_2.2.5)(64bit)
Requires:      libpcre.so.1()(64bit)
Requires:      libpthread.so.0()(64bit)
Requires:      libpthread.so.0(GLIBC_2.2.5)(64bit)
Requires:      libpthread.so.0(GLIBC_2.3.3)(64bit)
Requires:      libssl.so.10()(64bit)
Requires:      libssl.so.10(libssl.so.10)(64bit)
Requires:      libz.so.1()(64bit)
Requires:      openssl >= 1.0.2
#Requires:      rpmlib(CompressedFileNames) <= 3.0.4-1
#Requires:      rpmlib(FileDigests) <= 4.6.0-1
#Requires:      rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires:      rtld(GNU_HASH)
Requires:      shadow-utils
Requires:      systemd
Requires:      systemd
Requires:      systemd
#Requires:      rpmlib(PayloadIsXz) <= 5.2-1
#suggest
#enhance
%description
nginx [engine x] is an HTTP and reverse proxy server, as well as
a mail proxy server.
%files
%config(noreplace) %attr(0644, root, root) "/etc/logrotate.d/nginx"
%dir %attr(0755, root, root) "/etc/nginx"
%dir %attr(0755, root, root) "/etc/nginx/conf.d"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/conf.d/default.conf"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/fastcgi_params"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/koi-utf"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/koi-win"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/mime.types"
%attr(0777, root, root) "/etc/nginx/modules"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/nginx.conf"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/scgi_params"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/uwsgi_params"
%config(noreplace) %attr(0644, root, root) "/etc/nginx/win-utf"
%config(noreplace) %attr(0644, root, root) "/etc/sysconfig/nginx"
%attr(0644, root, root) "/usr/lib/systemd/system/nginx.service"
%dir %attr(0755, root, root) "/usr/lib64/nginx"
%dir %attr(0755, root, root) "/usr/lib64/nginx/modules"
%dir %attr(0755, root, root) "/usr/libexec/initscripts/legacy-actions/nginx"
%attr(0755, root, root) "/usr/libexec/initscripts/legacy-actions/nginx/check-reload"
%attr(0755, root, root) "/usr/libexec/initscripts/legacy-actions/nginx/upgrade"
%attr(0755, root, root) "/usr/sbin/nginx"
%dir %attr(0755, root, root) "/usr/share/docs/"
%doc %attr(0644, root, root) "/usr/share/docs/core.md"
%doc %attr(0644, root, root) "/usr/share/man/man8/nginx.8.gz"
%dir %attr(0755, root, root) "/usr/share/nginx"
%dir %attr(0755, root, root) "/usr/share/nginx/html"
%attr(0644, root, root) "/usr/share/nginx/html/50x.html"
%attr(0644, root, root) "/usr/share/nginx/html/index.html"
%dir %attr(0755, root, root) "/var/cache/nginx"
%dir %attr(0755, root, root) "/var/log/nginx"
%pre -p /bin/sh
# Add the "nginx" user
getent group nginx >/dev/null || groupadd -r nginx
getent passwd nginx >/dev/null || \
    useradd -r -g nginx -s /sbin/nologin \
    -d /var/cache/nginx -c "nginx user"  nginx
exit 0
%post -p /bin/sh
# Register the nginx service
if [ $1 -eq 1 ]; then
    /usr/bin/systemctl preset nginx.service >/dev/null 2>&1 ||:
    # print site info
    cat <<BANNER
----------------------------------------------------------------------

Welcome to tengine!

If you see this page, the tengine web server is successfully installed and
working. Further configuration is required.

For online documentation and support please refer to:
* http://tengine.taobao.org/

Thank you for using tengine.

----------------------------------------------------------------------
BANNER

    # Touch and set permisions on default log files on installation

    if [ -d /var/log/nginx ]; then
        if [ ! -e /var/log/nginx/access.log ]; then
            touch /var/log/nginx/access.log
            /usr/bin/chmod 640 /var/log/nginx/access.log
            /usr/bin/chown nginx:adm /var/log/nginx/access.log
        fi

        if [ ! -e /var/log/nginx/error.log ]; then
            touch /var/log/nginx/error.log
            /usr/bin/chmod 640 /var/log/nginx/error.log
            /usr/bin/chown nginx:adm /var/log/nginx/error.log
        fi
    fi
fi
%preun -p /bin/sh
if [ $1 -eq 0 ]; then
    /usr/bin/systemctl --no-reload disable nginx.service >/dev/null 2>&1 ||:
    /usr/bin/systemctl stop nginx.service >/dev/null 2>&1 ||:
fi
%postun -p /bin/sh
/usr/bin/systemctl daemon-reload >/dev/null 2>&1 ||:
if [ $1 -ge 1 ]; then
    /sbin/service nginx status  >/dev/null 2>&1 || exit 0
    /sbin/service nginx upgrade >/dev/null 2>&1 || echo \
        "Binary upgrade failed, please check nginx's error.log"
fi
%changelog

* Mon Jun 28 2021 Yuhuang Wu <296015668@qq.com> - 2.3.3-2.el7.ngx
- 2.3.3-2

* Tue Aug 20 2019 Yuhuang Wu <296015668@qq.com> - 2.3.2-1.el7.ngx
- 2.3.2-1
